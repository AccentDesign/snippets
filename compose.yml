services:
  app:
    build:
      context: .
      args:
        ENVIRONMENT: dev
    environment:
    - DJANGO_MANAGEPY_COLLECTSTATIC=off
    - DEV_MODE=on
    - DJANGO_SETTINGS_MODULE=app.settings
    - ALLOWED_HOSTS=*
    - EMAIL_HOST=mail
    - EMAIL_PORT=1025
    - RDS_HOSTNAME=db
    - RDS_PORT=5432
    - RDS_DB_NAME=postgres
    - RDS_USERNAME=postgres
    - RDS_PASSWORD=password
    depends_on:
      db:
        condition: service_healthy
      mail:
        condition: service_healthy
    command:
      - "uv"
      - "run"
      - "manage.py"
      - "runserver"
      - "0.0.0.0:80"
    ports:
      - "80:80"

    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml

  mail:
    image: maildev/maildev
    expose:
      - "1025"
    ports:
      - "8025:8025"
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 10s

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - postgres:/var/lib/postgresql/data/pgdata
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres:
